{"ast":null,"code":"var _jsxFileName = \"/Users/srimanthreddy/Documents/ai-meal-planner-main-2/client/src/contexts/UserContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { loginUser, signupUser } from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check for saved user in localStorage\n    const savedUser = localStorage.getItem('user');\n    if (savedUser) {\n      setUser(JSON.parse(savedUser));\n    }\n    setLoading(false);\n  }, []);\n  const login = async credentials => {\n    try {\n      const userData = await loginUser(credentials);\n      setUser(userData);\n      localStorage.setItem('user', JSON.stringify(userData));\n      return userData;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const signup = async userData => {\n    try {\n      const newUser = await signupUser(userData);\n      setUser(newUser);\n      localStorage.setItem('user', JSON.stringify(newUser));\n      return newUser;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n  };\n  const updateUser = updatedData => {\n    const updatedUser = {\n      ...user,\n      ...updatedData\n    };\n    setUser(updatedUser);\n    localStorage.setItem('user', JSON.stringify(updatedUser));\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      loading,\n      login,\n      signup,\n      logout,\n      updateUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","loginUser","signupUser","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","user","setUser","loading","setLoading","savedUser","localStorage","getItem","JSON","parse","login","credentials","userData","setItem","stringify","error","signup","newUser","logout","removeItem","updateUser","updatedData","updatedUser","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/srimanthreddy/Documents/ai-meal-planner-main-2/client/src/contexts/UserContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport { loginUser, signupUser } from '../utils/api';\n\nexport const UserContext = createContext();\n\nexport const UserProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check for saved user in localStorage\n    const savedUser = localStorage.getItem('user');\n    if (savedUser) {\n      setUser(JSON.parse(savedUser));\n    }\n    setLoading(false);\n  }, []);\n\n  const login = async (credentials) => {\n    try {\n      const userData = await loginUser(credentials);\n      setUser(userData);\n      localStorage.setItem('user', JSON.stringify(userData));\n      return userData;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const signup = async (userData) => {\n    try {\n      const newUser = await signupUser(userData);\n      setUser(newUser);\n      localStorage.setItem('user', JSON.stringify(newUser));\n      return newUser;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n  };\n\n  const updateUser = (updatedData) => {\n    const updatedUser = { ...user, ...updatedData };\n    setUser(updatedUser);\n    localStorage.setItem('user', JSON.stringify(updatedUser));\n  };\n\n  return (\n    <UserContext.Provider value={{ user, loading, login, signup, logout, updateUser }}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,SAASC,SAAS,EAAEC,UAAU,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMa,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC9C,IAAIF,SAAS,EAAE;MACbH,OAAO,CAACM,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC,CAAC;IAChC;IACAD,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,KAAK,GAAG,MAAOC,WAAW,IAAK;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMnB,SAAS,CAACkB,WAAW,CAAC;MAC7CT,OAAO,CAACU,QAAQ,CAAC;MACjBN,YAAY,CAACO,OAAO,CAAC,MAAM,EAAEL,IAAI,CAACM,SAAS,CAACF,QAAQ,CAAC,CAAC;MACtD,OAAOA,QAAQ;IACjB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMC,MAAM,GAAG,MAAOJ,QAAQ,IAAK;IACjC,IAAI;MACF,MAAMK,OAAO,GAAG,MAAMvB,UAAU,CAACkB,QAAQ,CAAC;MAC1CV,OAAO,CAACe,OAAO,CAAC;MAChBX,YAAY,CAACO,OAAO,CAAC,MAAM,EAAEL,IAAI,CAACM,SAAS,CAACG,OAAO,CAAC,CAAC;MACrD,OAAOA,OAAO;IAChB,CAAC,CAAC,OAAOF,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACnBhB,OAAO,CAAC,IAAI,CAAC;IACbI,YAAY,CAACa,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;EAED,MAAMC,UAAU,GAAIC,WAAW,IAAK;IAClC,MAAMC,WAAW,GAAG;MAAE,GAAGrB,IAAI;MAAE,GAAGoB;IAAY,CAAC;IAC/CnB,OAAO,CAACoB,WAAW,CAAC;IACpBhB,YAAY,CAACO,OAAO,CAAC,MAAM,EAAEL,IAAI,CAACM,SAAS,CAACQ,WAAW,CAAC,CAAC;EAC3D,CAAC;EAED,oBACE1B,OAAA,CAACC,WAAW,CAAC0B,QAAQ;IAACC,KAAK,EAAE;MAAEvB,IAAI;MAAEE,OAAO;MAAEO,KAAK;MAAEM,MAAM;MAAEE,MAAM;MAAEE;IAAW,CAAE;IAAArB,QAAA,EAC/EA;EAAQ;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC5B,EAAA,CAnDWF,YAAY;AAAA+B,EAAA,GAAZ/B,YAAY;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}